Lab 2 - Maven project
	Day3.demo2.ConfigServer -> dependency - Config Server
	
	Create ConfigServerApplication.java
		package demo;

		import org.springframework.boot.SpringApplication;
		import org.springframework.boot.autoconfigure.SpringBootApplication;

		import org.springframework.cloud.config.server.EnableConfigServer;

		@EnableConfigServer
		@SpringBootApplication
		public class Application {

			public static void main(String[] args) {
				SpringApplication.run(Application.class, args);
			}

		}

	Create application.properties
		server.port=8888
		spring.cloud.config.server.git.uri=https://github.com/Vaishali-Tapaswi/demo
	
	Run--->
	Maven Project = Day3.demo3.ConfigClient
		Dependencies -  Config Client, Web , Actuator (maven -> dep. hierarchy and validate)
		
		Write ConfigClientApplication
			package demo;

			import org.springframework.boot.SpringApplication;
			import org.springframework.boot.autoconfigure.SpringBootApplication;

			@SpringBootApplication
			public class ConfigClientApplication {

				public static void main(String[] args) {
					SpringApplication.run(ConfigClientApplication.class, args);
				}

			}

--------------------------------------------------------------------
Lab 1 - Dependency (Day1.demo1.RestProvider, Day2.demo1.Service1
	- Maven - Day3.demo6.ApiGateway
		Dependency - API Gateway
	
		Write ApiGatewayApplication.java
			package demo;

			import org.springframework.boot.SpringApplication;
			import org.springframework.boot.autoconfigure.SpringBootApplication;
			import org.springframework.cloud.gateway.route.RouteLocator;
			import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
			import org.springframework.context.annotation.Bean;

			@SpringBootApplication

			public class ApiGatewayApplication {


				@Bean
				public RouteLocator  myRoutes(RouteLocatorBuilder builder) {
				    RouteLocator routelocator =builder.routes()
					.route(p -> p
					    .path("/demo1")
					    .uri("http://localhost:8080/demo1/")) //http://localhost:8080/demo1 
					.route(p -> p
					    .path("/demo2")
					    .uri("http://localhost:8085/demo2/")) //http://localhost:8085/demo2
					.build();
				    System.out.println(routelocator.getRoutes().buffer());
				    return routelocator;
				}
				
				public static void main(String[] args) {
					SpringApplication.run(ApiGatewayApplication.class, args);
				}

			}

	Observe error (redirection)
	
	Modify context path  (either yml file or properties file
		Day1.demo1.RestProvider
			server.servlet.contextPath=/demo1
		Day2.demo1.Service1 
			server.servlet.contextPath=/demo2
		
	
